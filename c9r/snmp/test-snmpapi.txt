# -*- mode: python; -*-
Tests for c9r.smnp.api.SNMPAPI:

Test 1: This test file is for doctest.testfile() and it needs a configuration file named
        'test-snmpapi-conf.json' in JSON format.

    >>> import os,sys
    >>> from c9r.file.config import Config
    >>> try:
    ...     import netsnmp
    ... except ImportError:
    ...     from pynetsnmp import netsnmp
    >>> from c9r.snmp.api import SNMPAPI
    >>> from c9r.app import Command
    >>> app = Command()
    >>> xc = Config('test-snmpapi-conf.json')
    >>> snmp = SNMPAPI(xc['host'], session=xc['session'])
    >>> hostname = snmp.get('SNMPv2-MIB::sysName', 0)

Test 2: The hostname should be what's configured:

    >>> hostname[0] == xc['name']
    True
    >>> name = snmp.get('.1.3.6.1.2.1.1.5', 0)
    >>> name[0] == hostname[0]
    True

Test 3: Getting 'sysName' by its OID should result the same:

    >>> snmp.get('.1.3.6.1.2.1.1.5.0')[0] == xc['name']
    True

Test 4: Walking a scalar value, both ways, should result in a single, matching value:

    >>> toid = xc['walk1']
    >>> res0 = netsnmp.snmpwalk(toid, Version=xc['session']['Version'], Community=xc['session']['Community'], DestHost=xc['host'])
    >>> res1 = snmp.walk(toid)
    >>> res0[0] == res1[0].val
    True
    >>> res1[0].val == xc['result1']
    True
    >>> type(res1)
    <class 'netsnmp.client.VarList'>

Test 5: Test SNMPAPI.get_object() with prefix removed:

    >>> snmp.get_object('.'.join(['.1.3.6.1.2.1.2.2.1.5', xc['ifindex']]), 'Gauge32') == xc['ifspeed']
    True
    >>> oid_ifspeed = '.'.join(['.1.3.6.1.2.1.2.2.1.5', xc['ifindex']])
    >>> snmp.get(oid_ifspeed) == (xc['ifspeed'],)
    True
    >>> snmp.get('%s.%s' % ('IF-MIB::ifSpeed', xc['ifindex']))[0] == xc['ifspeed']
    True
    >>> int(snmp.get_object('.'.join(['.1.3.6.1.2.1.2.2.1.5', xc['ifindex']]), 'Gauge32')) == int(xc['ifspeed'])
    True

Test 6: Test SNMPAPI.walk_object():

    >>> res3 = snmp.walk_object(xc['walk2'])
    >>> res3[xc['case2']] == xc['result2']
    True

Test 7: Test SNMPAPI.walk_table():

    >>> res4 = snmp.walk_table(xc['table'])
    >>> res4[xc['case2']][xc['case3']] == xc['result2']
    True
