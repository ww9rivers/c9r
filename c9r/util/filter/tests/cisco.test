-*- mode:python; -*-
Unit tests for ../CiscoPI.py.

Test 1: Testing v1 CiscoPI.Normalizer

    >>> import sys
    >>> from c9r.util.filter import Filter
    >>> from c9r.util.filter.CiscoPI import Normalizer, Wired, Wireless, WiredSQL, WirelessSQL, WirelessGuest, WirelessUMHS
    >>> class Ofilter(Filter):
    ...   def close(self):
    ...     pass # Do not close on sys.stdout
    >>> with Normalizer(Ofilter(sys.stdout)) as t11:
    ...   for data in [{'MACAddress': '1A-2B-3C:4D-5E-6F', 'User': 'Domain\\nUser', 'LastSessionLength': '1 days 2 hrs 35 min 55 sec'},
    ...                {'MACAddress': '00:18:fe:8a:e0:3c', 'User': 'Domain'+chr(10)+'User', 'LastSessionLength': '3 hrs 47 min 26 sec'}]:
    ...     t11.write(data)
    {'MACAddress': '1a2b3c4d5e6f', 'User': 'Domain/nUser', 'LastSessionLength': 95755}{'MACAddress': '0018fe8ae03c', 'User': 'Domain/nUser', 'LastSessionLength': 13646}
    >>> t12 = Normalizer(Ofilter(sys.stdout)).open()
    >>> t12.write({'MACAddress': '0018.fe8a.e03d', 'User': 'Domain/User', 'LastSessionLength': '1 min 2 sec'})
    {'MACAddress': '0018fe8ae03d', 'User': 'Domain/User', 'LastSessionLength': 62}
    >>> t12.close()

Test 1.3: Prime 3.1 Unique Clients report changed the "Last Session Length" field: '2 hrs 10 min 2 sec' => '2hrs10min 2sec'

    >>> with Normalizer(Ofilter(sys.stdout)) as t13:
    ...   for data in [{'MACAddress': '00:00:a1:01:a8:7b', 'User': 'normal-user', 'LastSessionLength': '2hrs10min 2sec'}]:
    ...     t13.write(data)
    {'MACAddress': '0000a101a87b', 'User': 'normal-user', 'LastSessionLength': 7802}

Test 2: Test v2 CiscoPI.Wired, CiscoPI.Wireless, and Vendor normalization:

    >>> apple_inc = {
    ... 'LastSeen': 'Mon Mar 16 06:58:12 EST 2015',
    ... 'User': 'uniqname',
    ... 'MacAddress': '0c:3e:9f:59:f7:e0',
    ... 'Vendor': "Apple,Inc",
    ... 'IPAddress': '10.21.25.201',
    ... 'DeviceIPAddress': '172.24.128.7',
    ... 'Port': 'umhs-8021x',
    ... 'VLANID': '864',
    ... 'State80211': 'Disassociated',
    ... 'EndpointType': '',
    ... 'LastSessionLength': '2 min 3 sec',
    ... 'APName': 'AP-BSRB-2138-01A',
    ... 'APMACAddress': '001a308cb930',
    ... 'APMapLocation': 'Medical School > BSRB > Floor 2',
    ... 'SSID': 'UMHS-8021X',
    ... 'Profile': 'UMHS-8021X',
    ... 'Protocol': '802.11g',
    ... 'HostName': '',
    ... 'CCX': '',
    ... 'E2E': '',
    ... 'AuthenticationMethod': 'wpa2',
    ... 'GlobalUnique': '',
    ... 'LocalUnique': '',
    ... 'LinkLocal': '',
    ... 'APIPAddress': '10.50.39.78',
    ... 'ConnectionType': 'Lightweight',
    ... 'ConnectedInterface': '',
    ... 'AccessTechnologyType': 'Reserved',
    ... 'ConnectionType': 'Wireless'
    ... }
    >>> t21 = Wired(Ofilter(sys.stdout)).open()
    >>> t21.write(apple_inc)
    0
    >>> t21.is_filtered(apple_inc)
    True
    >>> t21.close()
    >>> t22 = Wireless(Ofilter(sys.stdout)).open()
    >>> t22.write(apple_inc)
    {'CCX': '', 'AccessTechnologyType': 'Reserved', 'APMapLocation': 'Medical School > BSRB > Floor 2', 'GlobalUnique': '', 'MacAddress': '0c:3e:9f:59:f7:e0', 'Vendor': 'Apple', 'HostName': '', 'VLANID': '864', 'EndpointType': '', 'ConnectedInterface': '', 'E2E': '', 'LastSeen': 'Mon Mar 16 06:58:12 EST 2015', 'State80211': 'Disassociated', 'APIPAddress': '10.50.39.78', 'IPAddress': '10.21.25.201', 'User': 'uniqname', 'APName': 'AP-BSRB-2138-01A', 'Profile': 'UMHS-8021X', 'LastSessionLength': 123, 'ConnectionType': 'Wireless', 'LocalUnique': '', 'LinkLocal': '', 'Protocol': '802.11g', 'SSID': 'UMHS-8021X', 'APMACAddress': '001a308cb930', 'AuthenticationMethod': 'wpa2', 'DeviceIPAddress': '172.24.128.7', 'Port': 'umhs-8021x'}
    >>> t22.close()

Test 3: CiscoPI.WiredSQL,  CiscoPI.WirelessSQL

    >>> multi_ipv6 = {
    ... 'LastSeen': 'Mon Mar 16 07:25:00 EST 2015',
    ... 'User': 'host/MSL00079.umhs.med.umich.edu',
    ... 'MacAddress': '2477036e0ddc',
    ... 'Vendor': 'Intel, Inc.',
    ... 'IPAddress': '10.21.120.221',
    ... 'DeviceIPAddress': '10.50.18.11',
    ... 'Port': 'umhs-8021x',
    ... 'VLANID': 3570,
    ... 'State80211': 'Associated',
    ... 'EndpointType': 'none',
    ... 'LastSessionLength': '3 min 4 sec',
    ... 'APName': 'AP-NCRC400-s017-01',
    ... 'APMACAddress': '00270d0b7de0',
    ... 'APMapLocation': 'Root Area',
    ... 'SSID': 'UMHS-8021X',
    ... 'Profile': 'UMHS-8021X',
    ... 'Protocol': '802.11n(5GHz)',
    ... 'HostName': '',
    ... 'CCX': 'V4',
    ... 'E2E': 'V1',
    ... 'AuthenticationMethod': 'wpa2',
    ... 'GlobalUnique': "2601:4:f00:169b:69c5:3e56:502:c9cc, 2601:4:f00:169b:7d69:f2e9:e84d:ce95, 2601:4:f00:169b:fc43:88bb:1b43:fdcd",
    ... 'LocalUnique': '',
    ... 'LinkLocal': 'fe80::fc43:88bb:1b43:fdcd',
    ... 'APIPAddress': '10.50.17.143',
    ... 'ConnectionType': 'Lightweight',
    ... 'ConnectedInterface': '',
    ... 'AccessTechnologyType': 'Reserved',
    ... 'ConnectionType': 'Wireless'
    ... }
    >>> t31 = WiredSQL(Ofilter(sys.stdout)).open()
    >>> t31.write(multi_ipv6)
    0
    >>> t31.is_filtered(apple_inc)
    True
    >>> t31.close()
    >>> t32 = WirelessSQL(Ofilter(sys.stdout)).open()
    >>> t32.write(multi_ipv6)
    {'CCX': 'V4', 'AccessTechnologyType': 'Reserved', 'APMapLocation': 'Root Area', 'GlobalUnique': '2601:4:f00:169b:69c5:3e56:502:c9cc, 2601:4:f00:169b:7d69:f2e9:e84d:ce95, 2601:4:f00:169b:fc43:88bb:1b43:fdcd', 'MacAddress': '2477036e0ddc', 'Vendor': 'Intel Inc', 'HostName': '', 'VLANID': 3570, 'EndpointType': 'none', 'ConnectedInterface': '', 'E2E': 'V1', 'LastSeen': 'Mar 16 2015 07:25:00AM', 'State80211': 'Associated', 'APIPAddress': '10.50.17.143', 'IPAddress': '10.21.120.221', 'User': 'host/MSL00079.umhs.med.umich.edu', 'APName': 'AP-NCRC400-s017-01', 'Profile': 'UMHS-8021X', 'LastSessionLength': 184, 'ConnectionType': 'Wireless', 'LocalUnique': '', 'LinkLocal': 'fe80::fc43:88bb:1b43:fdcd', 'Protocol': '802.11n(5GHz)', 'SSID': 'UMHS-8021X', 'APMACAddress': '00270d0b7de0', 'AuthenticationMethod': 'wpa2', 'DeviceIPAddress': '10.50.18.11', 'Port': 'umhs-8021x'}
    >>> t32.close()

Test 4: LastSessionLength is integer

    >>> apple_inc['ConnectionType'] = 'Wired'
    >>> apple_inc['LastSessionLength'] = 124
    >>> t21.write(apple_inc)
    {'CCX': '', 'AccessTechnologyType': 'Reserved', 'APMapLocation': 'Medical School > BSRB > Floor 2', 'GlobalUnique': '', 'MacAddress': '0c:3e:9f:59:f7:e0', 'Vendor': 'Apple', 'HostName': '', 'VLANID': '864', 'EndpointType': '', 'ConnectedInterface': '', 'E2E': '', 'LastSeen': 'Mon Mar 16 06:58:12 EST 2015', 'State80211': 'Disassociated', 'APIPAddress': '10.50.39.78', 'IPAddress': '10.21.25.201', 'User': 'uniqname', 'APName': 'AP-BSRB-2138-01A', 'Profile': 'UMHS-8021X', 'LastSessionLength': 124, 'ConnectionType': 'Wired', 'LocalUnique': '', 'LinkLocal': '', 'Protocol': '802.11g', 'SSID': 'UMHS-8021X', 'APMACAddress': '001a308cb930', 'AuthenticationMethod': 'wpa2', 'DeviceIPAddress': '172.24.128.7', 'Port': 'umhs-8021x'}

Test 5: Guest vs. UMHS

    >>> t51 = WirelessGuest(Ofilter(sys.stdout)).open()
    >>> t52 = WirelessUMHS(Ofilter(sys.stdout)).open()
    ... # t51 and t52 should both fiter out "Wired" connections:
    >>> t51.is_filtered(apple_inc)
    True
    >>> t52.is_filtered(apple_inc)
    True
    >>> apple_inc['ConnectionType'] = 'Wireless'
    ... # t51 should fiter out "Wireless" with "UMHS-8021X', t52 should not:
    >>> t51.is_filtered(apple_inc)
    True
    >>> t52.is_filtered(apple_inc)
    False
    >>> apple_inc['SSID'] = 'MGuest-UMHS'
    ... # t51 should not fiter out "Wireless" with "MGuest-UMHS', t52 should:
    >>> t51.is_filtered(apple_inc)
    False
    >>> t52.is_filtered(apple_inc)
    True
