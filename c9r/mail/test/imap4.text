# -*- mode:python; -*-
# $Id: imap4.text,v 1.7 2015/07/23 16:03:59 weiwang Exp $

Tests for c9r/imap4.py:

    >>> import os
    >>> from c9r.app import Command
    >>> from c9r.pylog import logger
    >>> from c9r.mail import imap4

Load proper configuration:

    >>> class Test(Command):
    ...   def_conf = ['test/fetch-conf.json']
    >>> cmd = Test()
    >>> xc = cmd.config()

Make sure there is an IMAP server configured:

    >>> type(xc.imap.server)
    <type 'str'>

and a port:

    >>> type(xc.imap.port)
    <type 'int'>

Test 1: Open a mailbox to search:

    >>> im = imap4.Mailbox(xc)
    >>> xres, xdata = im.search(xc.search)
    >>> latest_email_uid = xdata[0].split()[-1]
    >>> result, data = im.fetch(latest_email_uid)
    >>> type(data[0][1])
    <type 'str'>

Test 2: This need at least one of the "UMHS Headlines" messages to be read to succeed:

    >>> xr2, xd2 = im.search(xc.search2)
    >>> xr3, xd3 = im.search(xc.search3)
    >>> len(set(xd3[0].split())-set(xd2[0].split())) > 0
    True

Test 3: Search is case insensitive:

    >>> xr4, xd4 = im.search(xc.search4)
    >>> xd4 == xd3
    True

Test 3.5: Search for something not existing:

     >>> logger.debug('Searching for: "{0}"'.format(xc.nosuchmail))
     >>> im.search(xc.nosuchmail)
     ('OK', [''])

Test 4: Lync tests:

     >>> lync = xc.lynctest
     >>> im.select(lync.folder)[0]
     'OK'
     >>> xrl, xdl = im.search(lync.search)
     >>> xrl
     'OK'
     >>> mlist = xdl[0].split()
     >>> len(mlist) > 0
     True
     >>> mlast = mlist.pop()
     >>> mo = im.fetch(mlast)
     >>> mo[0]
     'OK'
     >>> from c9r.mail import parser
     >>> parse = parser.Parser()
     >>> msg = parse(mo[1][0][1])
     >>> msg['from'][-14:]
     'everbridge.net'
     >>> im.select()[0]
     'OK'

Test 5: Watch "Archive/cron" folder

     >>> cron = xc.cron
     >>> rc, count = im.select(cron.mailbox)
     >>> rc
     'OK'
     >>> int(count[0]) > 0
     True

Test 6: Watch "Archive/wired-clients" folder:

     >>> t6 = xc.get('wired-clients')
     >>> t6 is not None
     True
     >>> rc6, count6 = im.select(t6.mailbox)
     >>> rc6
     'OK'
     >>> int(count6[0]) > 0
     True
     >>> rc61, ml61 = im.search(t6.search)
     >>> rc61
     'OK'
     >>> len(ml61[0].split()) > 0
     True

Test 7: Search for "ironport-reports"

     >>> r70, c70 = im.select('Inbox')
     >>> r70
     'OK'
     >>> int(c70[0]) > 0
     True
     >>> t7 = xc.get('ironport-reports')
     >>> t7 is not None
     True
     >>> r71, m71 = im.search(t7.search)
     >>> r71
     'OK'
     >>> len(m71[0].split()) > 0
     True

Test 8: Testing box creation and archive
     >>> t8 = xc.get('archive-test')
     >>> r81, m81 = im.search(t8.search)
     >>> r81
     'OK'
     >>> m81 = m81[0].split()
     >>> if len(m81) > 0:
     ...     im.archive(m81[0], t8.archive)
     ('OK', [None])
